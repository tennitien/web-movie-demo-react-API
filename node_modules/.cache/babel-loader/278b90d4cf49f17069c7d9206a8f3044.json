{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Button from '../UI/Button/Button';\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport './Banner.scss';\nimport { useSelector } from 'react-redux';\nimport { dataSelector } from '../../store/data';\nexport default function Banner() {\n  const data = useSelector(dataSelector.data);\n  console.log(data);\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(false);\n  const [urlBanner, setUrlBanner] = useState(null);\n  const imgType = 'backdrop_path';\n  const movieBackdrop = data.filter(item => item.backdrop_path);\n  const movieRandom = movieBackdrop[Math.floor(Math.random() * movieBackdrop.length - 1)];\n  // const trans = JSON.stringify(movieRandom);\n  // const tran22 = JSON.parse(trans);\n  // console.log(tran22);\n  console.log(movieRandom);\n  console.log(movieRandom[imgType]);\n  let result = '';\n  let i = 0;\n\n  // do {\n  //   i = i + 1;\n  //   result = result + i;\n  // } while (i < 5);\n\n  // console.log(result);\n\n  // call API\n  // const getMovie = async () => {\n  //   try {\n  //     const response = await tmdbApi.getMovie('fetchNetflixOriginals');\n  //     const dataFilter = response.results.filter(item => item.backdrop_path);\n  //     console.log(dataFilter);\n  //     // fetched randomly from 'fetchNetflixOriginals' movies.\n  //     const dataRandom =\n  //       dataFilter[Math.floor(Math.random() * dataFilter.length - 1)];\n  //     setMovie(dataRandom);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  // };\n  // useEffect(() => {\n  //   getMovie();\n  // }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"names":["React","useState","useEffect","Button","tmdbApi","apiConfig","useSelector","dataSelector","Banner","data","console","log","movie","setMovie","error","setError","urlBanner","setUrlBanner","imgType","movieBackdrop","filter","item","backdrop_path","movieRandom","Math","floor","random","length","result","i","createElement","Fragment"],"sources":["/Users/tienichii/Downloads/WebMovie/src/components/Banner/Banner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Button from '../UI/Button/Button';\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './Banner.scss';\nimport { useSelector } from 'react-redux';\nimport { dataSelector } from '../../store/data';\n\nexport default function Banner() {\n  const data = useSelector(dataSelector.data);\n  console.log(data);\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(false);\n  const [urlBanner, setUrlBanner] = useState(null);\n  const imgType = 'backdrop_path';\n\n  const movieBackdrop = data.filter(item => item.backdrop_path);\n  const movieRandom =\n    movieBackdrop[Math.floor(Math.random() * movieBackdrop.length - 1)];\n  // const trans = JSON.stringify(movieRandom);\n  // const tran22 = JSON.parse(trans);\n  // console.log(tran22);\n  console.log(movieRandom);\n  console.log(movieRandom[imgType]);\n  let result = '';\n  let i = 0;\n\n  // do {\n  //   i = i + 1;\n  //   result = result + i;\n  // } while (i < 5);\n\n  // console.log(result);\n\n  // call API\n  // const getMovie = async () => {\n  //   try {\n  //     const response = await tmdbApi.getMovie('fetchNetflixOriginals');\n  //     const dataFilter = response.results.filter(item => item.backdrop_path);\n  //     console.log(dataFilter);\n  //     // fetched randomly from 'fetchNetflixOriginals' movies.\n  //     const dataRandom =\n  //       dataFilter[Math.floor(Math.random() * dataFilter.length - 1)];\n  //     setMovie(dataRandom);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  // };\n  // useEffect(() => {\n  //   getMovie();\n  // }, []);\n  return (\n    <>\n      {/* {error && (\n        <div\n          className='banner'\n          style={{\n            backgroundImage: `url(${urlBanner})`,\n          }}\n        >\n          <div className='container'>\n            <div className='banner-text'>\n              <h2 className='name'>{movie.name || movie.title || ''}</h2>\n              <Button className='btn-white mr-1'>Play</Button>\n              <Button className='btn-white '>My List</Button>\n              <p className='overview mt-1'>{movie.overview}</p>\n            </div>\n          </div>\n        </div>\n      )} */}\n    </>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,SAAS,MAAM,qBAAqB;AAE3C,OAAO,eAAe;AACtB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,MAAMC,IAAI,GAAGH,WAAW,CAACC,YAAY,CAACE,IAAI,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMiB,OAAO,GAAG,eAAe;EAE/B,MAAMC,aAAa,GAAGV,IAAI,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,aAAa,CAAC;EAC7D,MAAMC,WAAW,GACfJ,aAAa,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,aAAa,CAACQ,MAAM,GAAG,CAAC,CAAC,CAAC;EACrE;EACA;EACA;EACAjB,OAAO,CAACC,GAAG,CAACY,WAAW,CAAC;EACxBb,OAAO,CAACC,GAAG,CAACY,WAAW,CAACL,OAAO,CAAC,CAAC;EACjC,IAAIU,MAAM,GAAG,EAAE;EACf,IAAIC,CAAC,GAAG,CAAC;;EAET;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE7B,KAAA,CAAA8B,aAAA,CAAA9B,KAAA,CAAA+B,QAAA,MAkBE,CAAC;AAEP"},"metadata":{},"sourceType":"module"}