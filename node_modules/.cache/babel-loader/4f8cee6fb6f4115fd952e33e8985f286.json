{"ast":null,"code":"var _jsxFileName = \"/Users/tienichii/Downloads/WebMovie/src/components/MovieDetail/MovieDetail.js\";\nimport React, { useState } from 'react';\nimport './MovieDetail.scss';\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport { useSelector } from 'react-redux';\nimport { popupSelector } from '../../store/popup';\nconst MovieDetail = () => {\n  // const [trailerKey, setTrailerKey] = useState(null);\n  // const isOpen = useSelector(popupSelector.isOpen);\n  // const movie = useSelector(popupSelector.movie);\n  // // Check movie\n  // if (!movie) return null;\n\n  // // call API\n  // async function fetchVideo(id) {\n  //   try {\n  //     const response = await tmdbApi.getVideo(id);\n  //     if (response.results.length) {\n  //       const trailer = response.results.find(item => item.type === 'Trailer');\n  //       const teaser = response.results.find(item => item.type === 'Teaser');\n  //       setTrailerKey(trailer ? trailer.key : teaser.key);\n  //     }\n  //   } catch (error) {\n  //     throw new Error(error);\n  //   }\n  // }\n  // fetchVideo(movie.id);\n\n  // // check video to render trailer or backdrop\n  // let video;\n  // if (trailerKey) {\n  //   video = (\n  //     <iframe\n  //       src={`https://www.youtube.com/embed/${trailerKey}`}\n  //       width='100%'\n  //       height='100%'\n  //       title={`nmj`}\n  //       className='detail-video'\n  //       allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share'\n  //     ></iframe>\n  //   );\n  // } else {\n  //   video = (\n  //     <img\n  //       src={`${apiConfig.originalImage(\n  //         movie.backdrop_path || movie.poster_path\n  //       )}`}\n  //       alt={movie.name || movie.title || ''}\n  //     />\n  //   );\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detialMovie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"fkhdkjfhksdjfhkjsfhkljsdfhkjlsdfhkdjshfdkjsfhklsdjhfklsdhfds fnldksjfkldsjfldsjflsdjfl fjsdlkfjsdlkjfdlskj\"));\n};\nexport default MovieDetail;","map":{"version":3,"names":["React","useState","tmdbApi","apiConfig","useSelector","popupSelector","MovieDetail","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/Users/tienichii/Downloads/WebMovie/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './MovieDetail.scss';\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport { useSelector } from 'react-redux';\nimport { popupSelector } from '../../store/popup';\n\nconst MovieDetail = () => {\n  // const [trailerKey, setTrailerKey] = useState(null);\n  // const isOpen = useSelector(popupSelector.isOpen);\n  // const movie = useSelector(popupSelector.movie);\n  // // Check movie\n  // if (!movie) return null;\n\n  // // call API\n  // async function fetchVideo(id) {\n  //   try {\n  //     const response = await tmdbApi.getVideo(id);\n  //     if (response.results.length) {\n  //       const trailer = response.results.find(item => item.type === 'Trailer');\n  //       const teaser = response.results.find(item => item.type === 'Teaser');\n  //       setTrailerKey(trailer ? trailer.key : teaser.key);\n  //     }\n  //   } catch (error) {\n  //     throw new Error(error);\n  //   }\n  // }\n  // fetchVideo(movie.id);\n\n  // // check video to render trailer or backdrop\n  // let video;\n  // if (trailerKey) {\n  //   video = (\n  //     <iframe\n  //       src={`https://www.youtube.com/embed/${trailerKey}`}\n  //       width='100%'\n  //       height='100%'\n  //       title={`nmj`}\n  //       className='detail-video'\n  //       allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share'\n  //     ></iframe>\n  //   );\n  // } else {\n  //   video = (\n  //     <img\n  //       src={`${apiConfig.originalImage(\n  //         movie.backdrop_path || movie.poster_path\n  //       )}`}\n  //       alt={movie.name || movie.title || ''}\n  //     />\n  //   );\n  // }\n\n  return (\n    <div id='detail'>\n      <div className='detialMovie'>\n        {/* <h2 className='detail-text__title'>{movie.name || movie.title}</h2>\n        <hr className='mb-1 mt-1'></hr>\n        <p className='large'>\n          <strong>\n            Release Date:\n            {movie.release_date || movie.first_air_date}\n          </strong>\n        </p>\n        <p className='large'>\n          <strong>Vote: {movie.vote_average}/10</strong>\n        </p>\n        <p className='mt-2'>{movie.overview}</p>\n\n        <div className='detail-video'>{video}</div> */}\n        fkhdkjfhksdjfhkjsfhkljsdfhkjlsdfhkdjshfdkjsfhklsdjhfklsdhfds\n        fnldksjfkldsjfldsjflsdjfl fjsdlkfjsdlkjfdlskj\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetail;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAC3B,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEN,KAAA,CAAAO,aAAA;IAAKC,EAAE,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACdd,KAAA,CAAAO,aAAA;IAAKQ,SAAS,EAAC,aAAa;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAcqB,4GAG5C,CACF,CAAC;AAEV,CAAC;AAED,eAAeR,WAAW"},"metadata":{},"sourceType":"module"}