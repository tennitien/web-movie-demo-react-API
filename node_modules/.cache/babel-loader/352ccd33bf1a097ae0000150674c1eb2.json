{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Button from '../UI/Button/Button';\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport './Banner.scss';\nexport default function Banner() {\n  const [movie, setMovie] = useState([]);\n  const [bannerBg, setBannerBg] = useState(null);\n  // call API\n  const getMovie = async () => {\n    try {\n      const response = await tmdbApi.getMovie('fetchNetflixOriginals');\n      const dataFilter = response.results.filter(item => item.backdrop_path);\n      // fetched randomly from 'fetchNetflixOriginals' movies.\n      const dataRandom = dataFilter[Math.floor(Math.random() * dataFilter.length - 1)];\n      setMovie(dataRandom);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    getMovie();\n  }, []);\n  console.log(movie);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"names":["React","useState","useEffect","Button","tmdbApi","apiConfig","Banner","movie","setMovie","bannerBg","setBannerBg","getMovie","response","dataFilter","results","filter","item","backdrop_path","dataRandom","Math","floor","random","length","error","console","log","message","createElement","Fragment"],"sources":["/Users/tienichii/Downloads/WebMovie/src/components/Banner/Banner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Button from '../UI/Button/Button';\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './Banner.scss';\n\nexport default function Banner() {\n  const [movie, setMovie] = useState([]);\n  const [bannerBg, setBannerBg] = useState(null);\n  // call API\n  const getMovie = async () => {\n    try {\n      const response = await tmdbApi.getMovie('fetchNetflixOriginals');\n      const dataFilter = response.results.filter(item => item.backdrop_path);\n      // fetched randomly from 'fetchNetflixOriginals' movies.\n      const dataRandom =\n        dataFilter[Math.floor(Math.random() * dataFilter.length - 1)];\n      setMovie(dataRandom);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    getMovie();\n  }, []);\n  console.log(movie);\n  return (\n    <>\n      {/* <div\n        className='banner'\n        style={{\n          backgroundImage: `url(${apiConfig.originalImage(\n            movie.backdrop_path\n          )})`,\n        }}\n      >\n        <div className='container'>\n          <div className='banner-text'>\n            <h2 className='name'>{movie.name || movie.title || ''}</h2>\n            <Button className='btn-white mr-1'>Play</Button>\n            <Button className='btn-white '>My List</Button>\n            <p className='overview mt-1'>{movie.overview}</p>\n          </div>\n        </div>\n      </div> */}\n    </>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,SAAS,MAAM,qBAAqB;AAE3C,OAAO,eAAe;AAEtB,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C;EACA,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACO,QAAQ,CAAC,uBAAuB,CAAC;MAChE,MAAME,UAAU,GAAGD,QAAQ,CAACE,OAAO,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,aAAa,CAAC;MACtE;MACA,MAAMC,UAAU,GACdL,UAAU,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,UAAU,CAACS,MAAM,GAAG,CAAC,CAAC,CAAC;MAC/Dd,QAAQ,CAACU,UAAU,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC5B;EACF,CAAC;EACDxB,SAAS,CAAC,MAAM;IACdS,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACNa,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;EAClB,oBACEP,KAAA,CAAA2B,aAAA,CAAA3B,KAAA,CAAA4B,QAAA,MAkBE,CAAC;AAEP"},"metadata":{},"sourceType":"module"}