{"ast":null,"code":"var _jsxFileName = \"/Users/tienichii/Downloads/WebMovie/src/components/Banner/Banner.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '../UI/Button/Button';\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport './Banner.scss';\nimport { useSelector } from 'react-redux';\nimport { dataSelector } from '../../store/data';\nexport default function Banner() {\n  const data = useSelector(dataSelector.data);\n  console.log(data);\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(false);\n  const [urlBanner, setUrlBanner] = useState(null);\n  const movieBackdrop = data.filter(item => item.backdrop_path);\n  const random = movieBackdrop[Math.floor(Math.random() * movieBackdrop.length - 1)];\n  const movieRandom = movieBackdrop[random];\n  const url = movieRandom.backdrop_path;\n  // call API\n  // const getMovie = async () => {\n  //   try {\n  //     const response = await tmdbApi.getMovie('fetchNetflixOriginals');\n  //     const dataFilter = response.results.filter(item => item.backdrop_path);\n  //     console.log(dataFilter);\n  //     // fetched randomly from 'fetchNetflixOriginals' movies.\n  //     const dataRandom =\n  //       dataFilter[Math.floor(Math.random() * dataFilter.length - 1)];\n  //     setMovie(dataRandom);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  // };\n  // useEffect(() => {\n  //   getMovie();\n  // }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: `url(${urlBanner})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, movie.name || movie.title || ''), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-white mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-white \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"My List\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"overview mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, movie.overview)))));\n}","map":{"version":3,"names":["React","useState","useEffect","Button","tmdbApi","apiConfig","useSelector","dataSelector","Banner","data","console","log","movie","setMovie","error","setError","urlBanner","setUrlBanner","movieBackdrop","filter","item","backdrop_path","random","Math","floor","length","movieRandom","url","createElement","Fragment","className","style","backgroundImage","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","title","overview"],"sources":["/Users/tienichii/Downloads/WebMovie/src/components/Banner/Banner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Button from '../UI/Button/Button';\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './Banner.scss';\nimport { useSelector } from 'react-redux';\nimport { dataSelector } from '../../store/data';\n\nexport default function Banner() {\n  const data = useSelector(dataSelector.data);\n  console.log(data);\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(false);\n  const [urlBanner, setUrlBanner] = useState(null);\n\n  const movieBackdrop = data.filter(item => item.backdrop_path);\n  const random =\n    movieBackdrop[Math.floor(Math.random() * movieBackdrop.length - 1)];\n  const movieRandom = movieBackdrop[random];\n  const url = movieRandom.backdrop_path;\n  // call API\n  // const getMovie = async () => {\n  //   try {\n  //     const response = await tmdbApi.getMovie('fetchNetflixOriginals');\n  //     const dataFilter = response.results.filter(item => item.backdrop_path);\n  //     console.log(dataFilter);\n  //     // fetched randomly from 'fetchNetflixOriginals' movies.\n  //     const dataRandom =\n  //       dataFilter[Math.floor(Math.random() * dataFilter.length - 1)];\n  //     setMovie(dataRandom);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  // };\n  // useEffect(() => {\n  //   getMovie();\n  // }, []);\n  return (\n    <>\n      {error && (\n        <div\n          className='banner'\n          style={{\n            backgroundImage: `url(${urlBanner})`,\n          }}\n        >\n          <div className='container'>\n            <div className='banner-text'>\n              <h2 className='name'>{movie.name || movie.title || ''}</h2>\n              <Button className='btn-white mr-1'>Play</Button>\n              <Button className='btn-white '>My List</Button>\n              <p className='overview mt-1'>{movie.overview}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}