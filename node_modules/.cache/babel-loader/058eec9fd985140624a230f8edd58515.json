{"ast":null,"code":"var _jsxFileName = \"/Users/tienichii/Downloads/WebMovie/src/components/MovieDetail/MovieDetail.js\";\n// https://api.themoviedb.org/3/movie/{movie_id}/videos?api_key=<api_key>\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport apiConfig from '../../api/apiConfig';\nimport tmdbApi from '../../api/tmdbApi';\nimport './MovieDetail.scss';\nexport default function MovieDetail(_ref) {\n  let {\n    movie,\n    classOpen\n  } = _ref;\n  const [trailerKey, setTrailerKey] = useState(null);\n\n  // Check movie\n  if (!movie) return null;\n\n  // call API\n  async function fetchVideo(id) {\n    try {\n      const response = await tmdbApi.getVideo(id);\n      if (response.results.length) {\n        const trailer = response.results.find(item => item.type === 'Trailer');\n        const teaser = response.results.find(item => item.type === 'Teaser');\n        setTrailerKey(trailer ? trailer.key : teaser.key);\n      }\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  fetchVideo(movie.id);\n\n  // check video to render trailer or backdrop\n  let video;\n  if (trailerKey) {\n    video = /*#__PURE__*/React.createElement(\"iframe\", {\n      src: `https://www.youtube.com/embed/${trailerKey}`,\n      width: \"100%\",\n      height: \"100%\",\n      title: `nmj`,\n      className: \"detail-video\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    });\n  } else {\n    video = /*#__PURE__*/React.createElement(\"img\", {\n      src: `${apiConfig.originalImage(movie.backdrop_path || movie.poster_path)}`,\n      alt: movie.name || movie.title || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"h1 dkljskldjsl\"));\n}","map":{"version":3,"names":["React","useState","ReactDOM","apiConfig","tmdbApi","MovieDetail","_ref","movie","classOpen","trailerKey","setTrailerKey","fetchVideo","id","response","getVideo","results","length","trailer","find","item","type","teaser","key","error","Error","video","createElement","src","width","height","title","className","allow","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","originalImage","backdrop_path","poster_path","alt","name","Fragment"],"sources":["/Users/tienichii/Downloads/WebMovie/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["// https://api.themoviedb.org/3/movie/{movie_id}/videos?api_key=<api_key>\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport apiConfig from '../../api/apiConfig';\nimport tmdbApi from '../../api/tmdbApi';\n\nimport './MovieDetail.scss';\n\nexport default function MovieDetail({ movie, classOpen }) {\n  const [trailerKey, setTrailerKey] = useState(null);\n\n  // Check movie\n  if (!movie) return null;\n\n  // call API\n  async function fetchVideo(id) {\n    try {\n      const response = await tmdbApi.getVideo(id);\n      if (response.results.length) {\n        const trailer = response.results.find(item => item.type === 'Trailer');\n        const teaser = response.results.find(item => item.type === 'Teaser');\n        setTrailerKey(trailer ? trailer.key : teaser.key);\n      }\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  fetchVideo(movie.id);\n\n  // check video to render trailer or backdrop\n  let video;\n  if (trailerKey) {\n    video = (\n      <iframe\n        src={`https://www.youtube.com/embed/${trailerKey}`}\n        width='100%'\n        height='100%'\n        title={`nmj`}\n        className='detail-video'\n        allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share'\n      ></iframe>\n    );\n  } else {\n    video = (\n      <img\n        src={`${apiConfig.originalImage(\n          movie.backdrop_path || movie.poster_path\n        )}`}\n        alt={movie.name || movie.title || ''}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div id='popup'>h1 dkljskldjsl</div>\n    </>\n  );\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAEhC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,OAAO,MAAM,mBAAmB;AAEvC,OAAO,oBAAoB;AAE3B,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAuB;EAAA,IAAtB;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACtD,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,IAAI,CAACM,KAAK,EAAE,OAAO,IAAI;;EAEvB;EACA,eAAeI,UAAUA,CAACC,EAAE,EAAE;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,QAAQ,CAACF,EAAE,CAAC;MAC3C,IAAIC,QAAQ,CAACE,OAAO,CAACC,MAAM,EAAE;QAC3B,MAAMC,OAAO,GAAGJ,QAAQ,CAACE,OAAO,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;QACtE,MAAMC,MAAM,GAAGR,QAAQ,CAACE,OAAO,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,QAAQ,CAAC;QACpEV,aAAa,CAACO,OAAO,GAAGA,OAAO,CAACK,GAAG,GAAGD,MAAM,CAACC,GAAG,CAAC;MACnD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;IACxB;EACF;EACAZ,UAAU,CAACJ,KAAK,CAACK,EAAE,CAAC;;EAEpB;EACA,IAAIa,KAAK;EACT,IAAIhB,UAAU,EAAE;IACdgB,KAAK,gBACHzB,KAAA,CAAA0B,aAAA;MACEC,GAAG,EAAG,iCAAgClB,UAAW,EAAE;MACnDmB,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,MAAM;MACbC,KAAK,EAAG,KAAK;MACbC,SAAS,EAAC,cAAc;MACxBC,KAAK,EAAC,qGAAqG;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACpG,CACV;EACH,CAAC,MAAM;IACLb,KAAK,gBACHzB,KAAA,CAAA0B,aAAA;MACEC,GAAG,EAAG,GAAExB,SAAS,CAACoC,aAAa,CAC7BhC,KAAK,CAACiC,aAAa,IAAIjC,KAAK,CAACkC,WAC/B,CAAE,EAAE;MACJC,GAAG,EAAEnC,KAAK,CAACoC,IAAI,IAAIpC,KAAK,CAACuB,KAAK,IAAI,EAAG;MAAAG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACtC,CACF;EACH;EAEA,oBACEtC,KAAA,CAAA0B,aAAA,CAAA1B,KAAA,CAAA4C,QAAA,qBACE5C,KAAA,CAAA0B,aAAA;IAAKd,EAAE,EAAC,OAAO;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAmB,CACnC,CAAC;AAEP"},"metadata":{},"sourceType":"module"}